Выполненные задачи:
• Создан API с использованием FastAPI.

• Разработка backend-логики для обработки изображений с использованием OpenCV.

• Хранение изображений и результатов в базе данных: PostgreSQL (приложила скрин, потому что в дальнейшем я решила использовать просто бота).

• Применение паттернов:
- Singleton для управления моделью распознавания лиц;
- Facade
- Factory

• Применение тестов pytest. Для проверки функции - правильно ли обрабатывает изображение и возвращает с отмеченными лицами.

• Разделение проекта, структурирование. Проект разделён на две части: 
- bot.py: Основной файл для запуска бота и обработки команд;
- face_detection.py: Файл, содержащий функцию detect_faces и все, что связано с обнаружением лиц.
• Валидация:
- проверки типа файла, отправленного пользователем. Бот должен принимать только изображения.

• Шаблоны HTML и реализация API (HTML и скрипт), Pandas - не использую, потому что остановилась на телеграм-боте. 